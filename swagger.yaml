openapi: 3.0.1
info:
  title: Moonbeans Platform API
  version: 2023-02-09 02:31:16UTC
servers:
  - url: https://api.moonbeans.io/{basePath}
    variables:
      basePath:
        default: ""
  - url: https://staging.api.moonbeans.io/{basePath}
    variables:
      basePath:
        default: ""
paths:
  /auth/{publicAddress}:
    get:
      responses:
        default:
          description: Given a wallet address, return a message to be signed in order to authorize a POST to the profile / collections / storefront endpoints.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-authenticator-prod/invocations
        connectionType: INTERNET
    parameters:
      - name: publicAddress
        in: path
        description: Generated path parameter for publicAddress
        required: true
        schema:
          type: string
  /collection:
    get:
      responses:
        default:
          description: Get all collections.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-collection-manager-prod/invocations
        connectionType: INTERNET
  /collection/ca/{contractAddress}:
    get:
      responses:
        default:
          description: Get a collection by its unique contract address.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-collection-manager-prod/invocations
        connectionType: INTERNET
    parameters:
      - name: contractAddress
        in: path
        description: Generated path parameter for contractAddress
        required: true
        schema:
          type: string
  /collection/featured:
    get:
      responses:
        default:
          description: Get all featured collections.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-collection-manager-prod/invocations
        connectionType: INTERNET
  /collection/status/{status}:
    get:
      responses:
        default:
          description: Get all collections that match a specific status field.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-collection-manager-prod/invocations
        connectionType: INTERNET
    parameters:
      - name: status
        in: path
        description: Generated path parameter for status
        required: true
        schema:
          type: string
  /collection/{collectionId}:
    get:
      responses:
        default:
          description: Get a collection by its unique collection ID / URL slug.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-collection-manager-prod/invocations
        connectionType: INTERNET
    post:
      responses:
        default:
          description: Create or update a collection by its unique collection ID.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-collection-manager-prod/invocations
        connectionType: INTERNET
    parameters:
      - name: collectionId
        in: path
        description: Generated path parameter for collectionId
        required: true
        schema:
          type: string
  /profile/{publicAddress}:
    get:
      responses:
        default:
          description: Get an existing Moonbeans profile and associated data.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-profile-manager-prod/invocations
        connectionType: INTERNET
    post:
      responses:
        default:
          description: Create or update a profile by its public wallet address.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-profile-manager-prod/invocations
        connectionType: INTERNET
    parameters:
      - name: publicAddress
        in: path
        description: Generated path parameter for publicAddress
        required: true
        schema:
          type: string
  /storefront:
    get:
      responses:
        default:
          description: Get the list of all storefronts.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-storefront-manager-prod/invocations
        connectionType: INTERNET
  /storefront/featured:
    get:
      responses:
        default:
          description: Get the list of all featured storefronts.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-storefront-manager-prod/invocations
        connectionType: INTERNET
  /storefront/{storefrontId}:
    get:
      responses:
        default:
          description: Get a storefront by its unique storefront ID.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-storefront-manager-prod/invocations
        connectionType: INTERNET
    post:
      responses:
        default:
          description: Create or update a storefront by its unique storefront ID.
      x-amazon-apigateway-integration:
        payloadFormatVersion: '1.0'
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:748459872289:function:moonbeans-storefront-manager-prod/invocations
        connectionType: INTERNET
    parameters:
      - name: storefrontId
        in: path
        description: Generated path parameter for storefrontId
        required: true
        schema:
          type: string
x-amazon-apigateway-cors:
  maxAge: 0
  allowCredentials: false
  allowOrigins:
    - '*'
x-amazon-apigateway-importexport-version: '1.0'
